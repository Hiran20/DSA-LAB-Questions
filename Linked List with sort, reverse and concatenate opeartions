#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* next;
};


struct Node* insert(struct Node* head, int data);
void display(struct Node* head);
struct Node* sortList(struct Node* head);
struct Node* reverseList(struct Node* head);
struct Node* concatenateLists(struct Node* head1, struct Node* head2);


int main() {
    struct Node* list1 = NULL;
    struct Node* list2 = NULL;

    list1 = insert(list1, 10);
    list1 = insert(list1, 40);
    list1 = insert(list1, 30);

    printf("List 1: ");
    display(list1);

    printf("Sorted List 1: ");
    list1 = sortList(list1);
    display(list1);

    printf("Reversed List 1: ");
    list1 = reverseList(list1);
    display(list1);

    
    list2 = insert(list2, 10);
    list2 = insert(list2, 30);

    printf("List 2: ");
    display(list2);

    printf("Concatenated List: ");
    list1 = concatenateLists(list1, list2);
    display(list1);

    return 0;
}


struct Node* insert(struct Node* head, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;

    if (head == NULL) {
        return newNode;
    }

    struct Node* temp = head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = newNode;

    return head;
}


void display(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}


struct Node* sortList(struct Node* head) {
    if (!head) return head;

    struct Node* temp1 = head;
    struct Node* temp2 = NULL;
    int temp;

    while (temp1) {
        temp2 = temp1->next;
        while (temp2) {
            if (temp1->data > temp2->data) {
                temp = temp1->data;
                temp1->data = temp2->data;
                temp2->data = temp;
            }
            temp2 = temp2->next;
        }
        temp1 = temp1->next;
    }

    return head;
}

struct Node* reverseList(struct Node* head) {
    struct Node* prev = NULL;
    struct Node* current = head;
    struct Node* next = NULL;

    while (current) {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    }
    return prev;
}

struct Node* concatenateLists(struct Node* head1, struct Node* head2) {
    if (!head1) return head2;
    if (!head2) return head1;

    struct Node* temp = head1;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = head2;

    return head1;
}
